/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CpinBuyPanel,
  CpinBuyPanelInterface,
} from "../../contracts/CpinBuyPanel";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AccessControlBadConfirmation",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "neededRole",
        type: "bytes32",
      },
    ],
    name: "AccessControlUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UPDATER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "capacity",
        type: "uint256",
      },
    ],
    name: "buyPanel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "capacity",
        type: "uint256",
      },
    ],
    name: "buyPanelNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "defaultAdmin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_panelContract",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "panelContract",
    outputs: [
      {
        internalType: "contract ICpinVirtualPanel",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "prices",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "callerConfirmation",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "currency",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "updatePrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001961001e565b6100d0565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161561006e5760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100cd5780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b611020806100df6000396000f3fe6080604052600436106100e85760003560e01c8063485cc9551161008a578063cfed246b11610059578063cfed246b14610293578063d547741f146102c0578063d9caed12146102e0578063e07666581461030057600080fd5b8063485cc9551461021e57806383bac10e1461023e57806391d148541461025e578063a217fddf1461027e57600080fd5b80632f2ff15d116100c65780632f2ff15d1461018857806336568abe146101aa578063457972de146101ca57806347e63380146101ea57600080fd5b806301ffc9a7146100ed578063248a9ca314610122578063264df0e514610150575b600080fd5b3480156100f957600080fd5b5061010d610108366004610dca565b610313565b60405190151581526020015b60405180910390f35b34801561012e57600080fd5b5061014261013d366004610df4565b61034a565b604051908152602001610119565b34801561015c57600080fd5b50600054610170906001600160a01b031681565b6040516001600160a01b039091168152602001610119565b34801561019457600080fd5b506101a86101a3366004610e29565b61036c565b005b3480156101b657600080fd5b506101a86101c5366004610e29565b61038e565b3480156101d657600080fd5b506101a86101e5366004610e55565b6103c6565b3480156101f657600080fd5b506101427f73e573f9566d61418a34d5de3ff49360f9c51fec37f7486551670290f6285dab81565b34801561022a57600080fd5b506101a8610239366004610e7f565b61040d565b34801561024a57600080fd5b506101a8610259366004610e55565b61056f565b34801561026a57600080fd5b5061010d610279366004610e29565b6106ba565b34801561028a57600080fd5b50610142600081565b34801561029f57600080fd5b506101426102ae366004610ea9565b60016020526000908152604090205481565b3480156102cc57600080fd5b506101a86102db366004610e29565b6106f2565b3480156102ec57600080fd5b5061010d6102fb366004610ec4565b61070e565b6101a861030e366004610df4565b61080a565b60006001600160e01b03198216637965db0b60e01b148061034457506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000908152600080516020610fcb833981519152602052604090206001015490565b6103758261034a565b61037e816109da565b61038883836109e7565b50505050565b6001600160a01b03811633146103b75760405163334bd91960e11b815260040160405180910390fd5b6103c18282610a8c565b505050565b7f73e573f9566d61418a34d5de3ff49360f9c51fec37f7486551670290f6285dab6103f0816109da565b506001600160a01b03909116600090815260016020526040902055565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156104535750825b905060008267ffffffffffffffff1660011480156104705750303b155b90508115801561047e575080155b1561049c5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156104c657845460ff60401b1916600160401b1785555b6104ce610b08565b6104d96000886109e7565b506105047f73e573f9566d61418a34d5de3ff49360f9c51fec37f7486551670290f6285dab886109e7565b50600080546001600160a01b0319166001600160a01b038816179055831561056657845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b6001600160a01b0382166000908152600160205260409020546105cc5760405162461bcd60e51b815260206004820152601060248201526f696e76616c69642063757272656e637960801b60448201526064015b60405180910390fd5b6000811180156105de57506103e88111155b61061d5760405162461bcd60e51b815260206004820152601060248201526f696e76616c696420636170616369747960801b60448201526064016105c3565b6001600160a01b0382166000908152600160205260408120546106409083610f16565b905061064e83333084610b12565b6000546001600160a01b031663ec41fa1d338461066e4262ed4e00610f2d565b6040518463ffffffff1660e01b815260040161068c93929190610f40565b600060405180830381600087803b1580156106a657600080fd5b505af1158015610566573d6000803e3d6000fd5b6000918252600080516020610fcb833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6106fb8261034a565b610704816109da565b6103888383610a8c565b60008061071a816109da565b6001600160a01b03851661075d5760405162461bcd60e51b815260206004820152600a602482015269696e76616c696420746f60b01b60448201526064016105c3565b6001600160a01b038416158061078f575073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6001600160a01b038516145b156107f2576000856001600160a01b03168460405160006040518083038185875af1925050503d80600081146107e1576040519150601f19603f3d011682016040523d82523d6000602084013e6107e6565b606091505b50909350610802915050565b6107fd848685610b79565b600191505b509392505050565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee60005260016020527fde3e59ea0eeb6a65f16dd826b7bdfb53723c09ad80c81d458bbf2e138d918523546108875760405162461bcd60e51b815260206004820152600f60248201526e6e6f206e617469766520707269636560881b60448201526064016105c3565b60008111801561089957506103e88111155b6108d85760405162461bcd60e51b815260206004820152601060248201526f696e76616c696420636170616369747960801b60448201526064016105c3565b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee600090815260016020527fde3e59ea0eeb6a65f16dd826b7bdfb53723c09ad80c81d458bbf2e138d918523546109239083610f16565b9050803410156109665760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b60448201526064016105c3565b6000546001600160a01b031663ec41fa1d33846109864262ed4e00610f2d565b6040518463ffffffff1660e01b81526004016109a493929190610f40565b600060405180830381600087803b1580156109be57600080fd5b505af11580156109d2573d6000803e3d6000fd5b505050505050565b6109e48133610baa565b50565b6000600080516020610fcb833981519152610a0284846106ba565b610a82576000848152602082815260408083206001600160a01b03871684529091529020805460ff19166001179055610a383390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610344565b6000915050610344565b6000600080516020610fcb833981519152610aa784846106ba565b15610a82576000848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a46001915050610344565b610b10610be7565b565b6040516001600160a01b0384811660248301528381166044830152606482018390526103889186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610c30565b6040516001600160a01b038381166024830152604482018390526103c191859182169063a9059cbb90606401610b47565b610bb482826106ba565b610be35760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016105c3565b5050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff16610b1057604051631afcd79f60e31b815260040160405180910390fd5b6000610c456001600160a01b03841683610c93565b90508051600014158015610c6a575080806020019051810190610c689190610f79565b155b156103c157604051635274afe760e01b81526001600160a01b03841660048201526024016105c3565b6060610ca183836000610ca8565b9392505050565b606081471015610ccd5760405163cd78605960e01b81523060048201526024016105c3565b600080856001600160a01b03168486604051610ce99190610f9b565b60006040518083038185875af1925050503d8060008114610d26576040519150601f19603f3d011682016040523d82523d6000602084013e610d2b565b606091505b5091509150610d3b868383610d45565b9695505050505050565b606082610d5a57610d5582610da1565b610ca1565b8151158015610d7157506001600160a01b0384163b155b15610d9a57604051639996b31560e01b81526001600160a01b03851660048201526024016105c3565b5080610ca1565b805115610db15780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b600060208284031215610ddc57600080fd5b81356001600160e01b031981168114610ca157600080fd5b600060208284031215610e0657600080fd5b5035919050565b80356001600160a01b0381168114610e2457600080fd5b919050565b60008060408385031215610e3c57600080fd5b82359150610e4c60208401610e0d565b90509250929050565b60008060408385031215610e6857600080fd5b610e7183610e0d565b946020939093013593505050565b60008060408385031215610e9257600080fd5b610e9b83610e0d565b9150610e4c60208401610e0d565b600060208284031215610ebb57600080fd5b610ca182610e0d565b600080600060608486031215610ed957600080fd5b610ee284610e0d565b9250610ef060208501610e0d565b9150604084013590509250925092565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761034457610344610f00565b8082018082111561034457610344610f00565b6001600160a01b039390931683526fffffffffffffffffffffffffffffffff91909116602083015263ffffffff16604082015260600190565b600060208284031215610f8b57600080fd5b81518015158114610ca157600080fd5b6000825160005b81811015610fbc5760208186018101518583015201610fa2565b50600092019182525091905056fe02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800a2646970667358221220f2a4fe4b3a4fc5dff9f049148f78e116a4e733cdacb4ba0e52c877a05c267e0464736f6c63430008170033";

type CpinBuyPanelConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CpinBuyPanelConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CpinBuyPanel__factory extends ContractFactory {
  constructor(...args: CpinBuyPanelConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<CpinBuyPanel> {
    return super.deploy(overrides || {}) as Promise<CpinBuyPanel>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): CpinBuyPanel {
    return super.attach(address) as CpinBuyPanel;
  }
  override connect(signer: Signer): CpinBuyPanel__factory {
    return super.connect(signer) as CpinBuyPanel__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CpinBuyPanelInterface {
    return new utils.Interface(_abi) as CpinBuyPanelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CpinBuyPanel {
    return new Contract(address, _abi, signerOrProvider) as CpinBuyPanel;
  }
}
