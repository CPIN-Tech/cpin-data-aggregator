/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReleaseCpin,
  ReleaseCpinInterface,
} from "../../contracts/ReleaseCpin";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "cpin_token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "startTime_",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "cliffEndTime_",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "endTime_",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "interval_",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Allocated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountAllocations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountClaims",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_holders",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "allocate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cliffEndTime",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endTime",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interval",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "releasableSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_principal",
        type: "uint256",
      },
    ],
    name: "releasableSupplyOfPrincipal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unallocated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "startTime_",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "cliffEndTime_",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "endTime_",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "interval_",
        type: "uint64",
      },
    ],
    name: "updateTiming",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001802380380620018028339810160408190526200003491620002b8565b6040518060400160405280600c81526020016b2932b632b0b9b29021a824a760a11b815250604051806040016040528060058152602001643921a824a760d91b8152506012898989898989898989898260009081620000949190620003eb565b506001620000a38382620003eb565b5060ff166080525050600480546001600160a01b031916339081179091556040518190600090600080516020620017e2833981519152908290a3506001600555620000ee8762000171565b6001600160a01b0390951660a052600793909355600680546001600160401b03958616600160c01b026001600160c01b03958716600160801b02959095166001600160801b0393871668010000000000000000026001600160801b0319909216969094169590951794909417161717905550620004b79950505050505050505050565b6004546001600160a01b03163314620001d15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620002385760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620001c8565b6004546040516001600160a01b03808416921690600080516020620017e283398151915290600090a3600480546001600160a01b0319166001600160a01b0392909216919091179055565b80516001600160a01b03811681146200029b57600080fd5b919050565b80516001600160401b03811681146200029b57600080fd5b600080600080600080600060e0888a031215620002d457600080fd5b620002df8862000283565b9650620002ef6020890162000283565b9550604088015194506200030660608901620002a0565b93506200031660808901620002a0565b92506200032660a08901620002a0565b91506200033660c08901620002a0565b905092959891949750929550565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200036f57607f821691505b6020821081036200039057634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003e6576000816000526020600020601f850160051c81016020861015620003c15750805b601f850160051c820191505b81811015620003e257828155600101620003cd565b5050505b505050565b81516001600160401b0381111562000407576200040762000344565b6200041f816200041884546200035a565b8462000396565b602080601f8311600181146200045757600084156200043e5750858301515b600019600386901b1c1916600185901b178555620003e2565b600085815260208120601f198616915b82811015620004885788860151825594840194600190910190840162000467565b5085821015620004a75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a0516112fe620004e4600039600081816103700152610673015260006101f201526112fe6000f3fe608060405234801561001057600080fd5b506004361061014c5760003560e01c8063715018a6116100c3578063b19a439c1161007c578063b19a439c14610309578063bdad4dc314610329578063df1c455c1461033c578063f0192f5514610345578063f2fde38b14610358578063fc0c546a1461036b57600080fd5b8063715018a61461028557806378e979251461028d5780638da5cb5b146102a157806391a3c462146102c6578063947a36fb146102e657806395d89b411461030157600080fd5b8063313ce56711610115578063313ce567146101eb5780633197cbb61461021c5780633e5ea10a146102375780634e71d92d1461023f5780636bded9661461024957806370a082311461025c57600080fd5b80628cc2621461015157806306fdde0314610177578063160a341e1461018c57806318160ddd146101c05780631ec82cb8146101c8575b600080fd5b61016461015f366004610f86565b610392565b6040519081526020015b60405180910390f35b61017f6103f3565b60405161016e9190610fc5565b6006546101a790600160401b900467ffffffffffffffff1681565b60405167ffffffffffffffff909116815260200161016e565b600254610164565b6101db6101d6366004610ff8565b610485565b604051901515815260200161016e565b60405160ff7f000000000000000000000000000000000000000000000000000000000000000016815260200161016e565b6006546101a790600160801b900467ffffffffffffffff1681565b6101646105a5565b6102476105c5565b005b61024761025736600461104c565b6106d8565b61016461026a366004610f86565b6001600160a01b031660009081526003602052604090205490565b610247610775565b6006546101a79067ffffffffffffffff1681565b6004546001600160a01b03165b6040516001600160a01b03909116815260200161016e565b6101646102d4366004610f86565b60096020526000908152604090205481565b6006546101a790600160c01b900467ffffffffffffffff1681565b61017f6107e9565b610164610317366004610f86565b60086020526000908152604090205481565b6102476103373660046110ec565b6107f8565b61016460075481565b610164610353366004611158565b610969565b610247610366366004610f86565b610a22565b6102ae7f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b03811660009081526008602052604081205481906103b690610969565b9050806000036103c95750600092915050565b6001600160a01b0383166000908152600960205260409020546103ec9082611187565b9392505050565b6060600080546104029061119a565b80601f016020809104026020016040519081016040528092919081815260200182805461042e9061119a565b801561047b5780601f106104505761010080835404028352916020019161047b565b820191906000526020600020905b81548152906001019060200180831161045e57829003601f168201915b5050505050905090565b6004546000906001600160a01b031633146104bb5760405162461bcd60e51b81526004016104b2906111d4565b60405180910390fd5b6001600160a01b038316610527576000846001600160a01b03168360405160006040518083038185875af1925050503d8060008114610516576040519150601f19603f3d011682016040523d82523d6000602084013e61051b565b606091505b509092506103ec915050565b60405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905284169063a9059cbb906044016020604051808303816000875af1158015610576573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059a9190611209565b506001949350505050565b60006105c06007546105b660025490565b610353919061122b565b905090565b6002600554036106175760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104b2565b6002600555600061062733610392565b90508060000361063757506106d1565b336000908152600960205260408120805483929061065690849061122b565b9091555061066690503382610b0d565b61069a6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610b97565b60405181815233907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a9060200160405180910390a2505b6001600555565b6004546001600160a01b031633146107025760405162461bcd60e51b81526004016104b2906111d4565b6006805467ffffffffffffffff9586166fffffffffffffffffffffffffffffffff1990911617600160401b94861694909402939093176fffffffffffffffffffffffffffffffff16600160801b928516929092026001600160c01b031691909117600160c01b9190931602919091179055565b6004546001600160a01b0316331461079f5760405162461bcd60e51b81526004016104b2906111d4565b6004546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600480546001600160a01b0319169055565b6060600180546104029061119a565b6004546001600160a01b031633146108225760405162461bcd60e51b81526004016104b2906111d4565b82811461087d5760405162461bcd60e51b815260206004820152602360248201527f4c696e65617252656c65617365546f6b656e3a206c656e677468206d69736d616044820152620e8c6d60eb1b60648201526084016104b2565b60148311156108f45760405162461bcd60e51b815260206004820152603860248201527f4c696e65617252656c65617365546f6b656e3a206d617820323020686f6c646560448201527f727320617420696e697469616c20616c6c6f636174696f6e000000000000000060648201526084016104b2565b60005b60ff81168411156109625761095085858360ff1681811061091a5761091a61123e565b905060200201602081019061092f9190610f86565b84848460ff168181106109445761094461123e565b90506020020135610bee565b8061095a81611254565b9150506108f7565b5050505050565b60065460009067ffffffffffffffff80821691600160801b900416428211806109a45750600654600160401b900467ffffffffffffffff1642105b156109b3575060009392505050565b6000826109c04284610c84565b6109ca9190611187565b600654909150600090600160c01b900467ffffffffffffffff166109ee8184611273565b6109f89190611295565b9050610a048484611187565b610a0e8288611295565b610a189190611273565b9695505050505050565b6004546001600160a01b03163314610a4c5760405162461bcd60e51b81526004016104b2906111d4565b6001600160a01b038116610ab15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b2565b6004546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600480546001600160a01b0319166001600160a01b0392909216919091179055565b8060026000828254610b1f9190611187565b90915550506001600160a01b03821660009081526003602052604081208054839290610b4c908490611187565b90915550506040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610be9908490610c9e565b505050565b8060076000828254610c009190611187565b90915550506001600160a01b03821660009081526008602052604081208054839290610c2d90849061122b565b90915550610c3d90508282610d70565b816001600160a01b03167f472f36e28bb47edb7c69c9e2ac00a77c66b505df54e9c818ac57110b0629e8c382604051610c7891815260200190565b60405180910390a25050565b6000818310610c935781610c95565b825b90505b92915050565b6000610cf3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610df29092919063ffffffff16565b805190915015610be95780806020019051810190610d119190611209565b610be95760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104b2565b8060026000828254610d82919061122b565b90915550506001600160a01b03821660009081526003602052604081208054839290610daf90849061122b565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610b8b565b6060610e018484600085610e09565b949350505050565b606082471015610e6a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104b2565b843b610eb85760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104b2565b600080866001600160a01b03168587604051610ed491906112ac565b60006040518083038185875af1925050503d8060008114610f11576040519150601f19603f3d011682016040523d82523d6000602084013e610f16565b606091505b5091509150610f26828286610f31565b979650505050505050565b60608315610f405750816103ec565b825115610f505782518084602001fd5b8160405162461bcd60e51b81526004016104b29190610fc5565b80356001600160a01b0381168114610f8157600080fd5b919050565b600060208284031215610f9857600080fd5b610c9582610f6a565b60005b83811015610fbc578181015183820152602001610fa4565b50506000910152565b6020815260008251806020840152610fe4816040850160208701610fa1565b601f01601f19169190910160400192915050565b60008060006060848603121561100d57600080fd5b61101684610f6a565b925061102460208501610f6a565b9150604084013590509250925092565b803567ffffffffffffffff81168114610f8157600080fd5b6000806000806080858703121561106257600080fd5b61106b85611034565b935061107960208601611034565b925061108760408601611034565b915061109560608601611034565b905092959194509250565b60008083601f8401126110b257600080fd5b50813567ffffffffffffffff8111156110ca57600080fd5b6020830191508360208260051b85010111156110e557600080fd5b9250929050565b6000806000806040858703121561110257600080fd5b843567ffffffffffffffff8082111561111a57600080fd5b611126888389016110a0565b9096509450602087013591508082111561113f57600080fd5b5061114c878288016110a0565b95989497509550505050565b60006020828403121561116a57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610c9857610c98611171565b600181811c908216806111ae57607f821691505b6020821081036111ce57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561121b57600080fd5b815180151581146103ec57600080fd5b80820180821115610c9857610c98611171565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff810361126a5761126a611171565b60010192915050565b60008261129057634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610c9857610c98611171565b600082516112be818460208701610fa1565b919091019291505056fea26469706673582212209834ffc88559a9c926a267e811362cbf320e3e7198d68891f74403a8382689bc64736f6c634300081700338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0";

type ReleaseCpinConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReleaseCpinConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReleaseCpin__factory extends ContractFactory {
  constructor(...args: ReleaseCpinConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    owner_: string,
    cpin_token_: string,
    amount_: BigNumberish,
    startTime_: BigNumberish,
    cliffEndTime_: BigNumberish,
    endTime_: BigNumberish,
    interval_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<ReleaseCpin> {
    return super.deploy(
      owner_,
      cpin_token_,
      amount_,
      startTime_,
      cliffEndTime_,
      endTime_,
      interval_,
      overrides || {}
    ) as Promise<ReleaseCpin>;
  }
  override getDeployTransaction(
    owner_: string,
    cpin_token_: string,
    amount_: BigNumberish,
    startTime_: BigNumberish,
    cliffEndTime_: BigNumberish,
    endTime_: BigNumberish,
    interval_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      owner_,
      cpin_token_,
      amount_,
      startTime_,
      cliffEndTime_,
      endTime_,
      interval_,
      overrides || {}
    );
  }
  override attach(address: string): ReleaseCpin {
    return super.attach(address) as ReleaseCpin;
  }
  override connect(signer: Signer): ReleaseCpin__factory {
    return super.connect(signer) as ReleaseCpin__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReleaseCpinInterface {
    return new utils.Interface(_abi) as ReleaseCpinInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReleaseCpin {
    return new Contract(address, _abi, signerOrProvider) as ReleaseCpin;
  }
}
