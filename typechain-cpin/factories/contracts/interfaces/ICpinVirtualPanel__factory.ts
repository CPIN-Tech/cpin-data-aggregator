/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  ICpinVirtualPanel,
  ICpinVirtualPanelInterface,
} from "../../../contracts/interfaces/ICpinVirtualPanel";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "capacity",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "expireDate",
        type: "uint32",
      },
    ],
    name: "PanelInfoUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint128[]",
        name: "capacities",
        type: "uint128[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "newTokenIds",
        type: "uint256[]",
      },
    ],
    name: "TokenSplited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newTokenId",
        type: "uint256",
      },
    ],
    name: "TokensMerged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "mergeTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "panelInfos",
    outputs: [
      {
        internalType: "uint128",
        name: "capacity",
        type: "uint128",
      },
      {
        internalType: "uint32",
        name: "expireDate",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "capacity",
        type: "uint128",
      },
      {
        internalType: "uint32",
        name: "expireDate",
        type: "uint32",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint128[]",
        name: "capacities",
        type: "uint128[]",
      },
    ],
    name: "splitToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "updateBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ICpinVirtualPanel__factory {
  static readonly abi = _abi;
  static createInterface(): ICpinVirtualPanelInterface {
    return new utils.Interface(_abi) as ICpinVirtualPanelInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICpinVirtualPanel {
    return new Contract(address, _abi, signerOrProvider) as ICpinVirtualPanel;
  }
}
