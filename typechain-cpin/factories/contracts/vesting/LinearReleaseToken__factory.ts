/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LinearReleaseToken,
  LinearReleaseTokenInterface,
} from "../../../contracts/vesting/LinearReleaseToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cliffEndTime_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Allocated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_holders",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "allocate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cliffEndTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lifetimeTotalAllocated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "releasableSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_principal",
        type: "uint256",
      },
    ],
    name: "releasableSupplyOfPrincipal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unallocated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101206040523480156200001257600080fd5b506040516200160d3803806200160d8339810160408190526200003591620002c0565b888888600062000046848262000421565b50600162000055838262000421565b5060ff166080525050600480546001600160a01b031916339081179091556040518190600090600080516020620015ed833981519152908290a3506001600555620000a086620000c9565b6001600160a01b039094166101005260069290925560a05260c05260e05250620004ed92505050565b6004546001600160a01b03163314620001295760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620001905760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000120565b6004546040516001600160a01b03808416921690600080516020620015ed83398151915290600090a3600480546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200020357600080fd5b81516001600160401b0380821115620002205762000220620001db565b604051601f8301601f19908116603f011681019082821181831017156200024b576200024b620001db565b81604052838152602092508660208588010111156200026957600080fd5b600091505b838210156200028d57858201830151818301840152908201906200026e565b6000602085830101528094505050505092915050565b80516001600160a01b0381168114620002bb57600080fd5b919050565b60008060008060008060008060006101208a8c031215620002e057600080fd5b89516001600160401b0380821115620002f857600080fd5b620003068d838e01620001f1565b9a5060208c01519150808211156200031d57600080fd5b506200032c8c828d01620001f1565b98505060408a015160ff811681146200034457600080fd5b96506200035460608b01620002a3565b95506200036460808b01620002a3565b945060a08a0151935060c08a0151925060e08a015191506101008a015190509295985092959850929598565b600181811c90821680620003a557607f821691505b602082108103620003c657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200041c576000816000526020600020601f850160051c81016020861015620003f75750805b601f850160051c820191505b81811015620004185782815560010162000403565b5050505b505050565b81516001600160401b038111156200043d576200043d620001db565b62000455816200044e845462000390565b84620003cc565b602080601f8311600181146200048d5760008415620004745750858301515b600019600386901b1c1916600185901b17855562000418565b600085815260208120601f198616915b82811015620004be578886015182559484019460019091019084016200049d565b5085821015620004dd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e0516101005161108a620005636000396000818161031001526104f80152600081816101f0015281816107d6015261082c015260008181610190015261077e01526000818161025a01528181610755015281816107b1015261080b015260006101c1015261108a6000f3fe608060405234801561001057600080fd5b506004361061012b5760003560e01c8063715018a6116100ad578063df1c455c11610071578063df1c455c146102bc578063ef5d9ae8146102c5578063f0192f55146102e5578063f2fde38b146102f8578063fc0c546a1461030b57600080fd5b8063715018a61461024d57806378e97925146102555780638da5cb5b1461027c57806395d89b41146102a1578063bdad4dc3146102a957600080fd5b8063313ce567116100f4578063313ce567146101ba5780633197cbb6146101eb5780633e5ea10a146102125780634e71d92d1461021a57806370a082311461022457600080fd5b80628cc2621461013057806306375ef21461015657806306fdde0314610176578063160a341e1461018b57806318160ddd146101b2575b600080fd5b61014361013e366004610dac565b610332565b6040519081526020015b60405180910390f35b610143610164366004610dac565b60076020526000908152604090205481565b61017e610393565b60405161014d9190610df9565b6101437f000000000000000000000000000000000000000000000000000000000000000081565b600254610143565b60405160ff7f000000000000000000000000000000000000000000000000000000000000000016815260200161014d565b6101437f000000000000000000000000000000000000000000000000000000000000000081565b610143610425565b610222610445565b005b610143610232366004610dac565b6001600160a01b031660009081526003602052604090205490565b61022261055d565b6101437f000000000000000000000000000000000000000000000000000000000000000081565b6004546001600160a01b03165b6040516001600160a01b03909116815260200161014d565b61017e6105d1565b6102226102b7366004610e78565b6105e0565b61014360065481565b6101436102d3366004610dac565b60086020526000908152604090205481565b6101436102f3366004610ee4565b610751565b610222610306366004610dac565b610864565b6102897f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b038116600090815260076020526040812054819061035690610751565b9050806000036103695750600092915050565b6001600160a01b03831660009081526008602052604090205461038c9082610f13565b9392505050565b6060600080546103a290610f26565b80601f01602080910402602001604051908101604052809291908181526020018280546103ce90610f26565b801561041b5780601f106103f05761010080835404028352916020019161041b565b820191906000526020600020905b8154815290600101906020018083116103fe57829003601f168201915b5050505050905090565b600061044060065461043660025490565b6102f39190610f60565b905090565b60026005540361049c5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260055560006104ac33610332565b9050806000036104bc5750610556565b33600090815260086020526040812080548392906104db908490610f60565b909155506104eb9050338261094f565b61051f6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633836109d9565b60405181815233907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a9060200160405180910390a2505b6001600555565b6004546001600160a01b031633146105875760405162461bcd60e51b815260040161049390610f73565b6004546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600480546001600160a01b0319169055565b6060600180546103a290610f26565b6004546001600160a01b0316331461060a5760405162461bcd60e51b815260040161049390610f73565b8281146106655760405162461bcd60e51b815260206004820152602360248201527f4c696e65617252656c65617365546f6b656e3a206c656e677468206d69736d616044820152620e8c6d60eb1b6064820152608401610493565b60148311156106dc5760405162461bcd60e51b815260206004820152603860248201527f4c696e65617252656c65617365546f6b656e3a206d617820323020686f6c646560448201527f727320617420696e697469616c20616c6c6f636174696f6e00000000000000006064820152608401610493565b60005b60ff811684111561074a5761073885858360ff1681811061070257610702610fa8565b90506020020160208101906107179190610dac565b84848460ff1681811061072c5761072c610fa8565b90506020020135610a30565b8061074281610fbe565b9150506106df565b5050505050565b60007f00000000000000000000000000000000000000000000000000000000000000004210806107a057507f000000000000000000000000000000000000000000000000000000000000000042105b156107ad57506000919050565b60007f00000000000000000000000000000000000000000000000000000000000000006107fa427f0000000000000000000000000000000000000000000000000000000000000000610ac6565b6108049190610f13565b90506108507f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610f13565b61085a8285610fdd565b61038c9190610ff4565b6004546001600160a01b0316331461088e5760405162461bcd60e51b815260040161049390610f73565b6001600160a01b0381166108f35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610493565b6004546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600480546001600160a01b0319166001600160a01b0392909216919091179055565b80600260008282546109619190610f13565b90915550506001600160a01b0382166000908152600360205260408120805483929061098e908490610f13565b90915550506040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610a2b908490610ae0565b505050565b8060066000828254610a429190610f13565b90915550506001600160a01b03821660009081526007602052604081208054839290610a6f908490610f60565b90915550610a7f90508282610bb2565b816001600160a01b03167f472f36e28bb47edb7c69c9e2ac00a77c66b505df54e9c818ac57110b0629e8c382604051610aba91815260200190565b60405180910390a25050565b6000818310610ad55781610ad7565b825b90505b92915050565b6000610b35826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610c349092919063ffffffff16565b805190915015610a2b5780806020019051810190610b539190611016565b610a2b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610493565b8060026000828254610bc49190610f60565b90915550506001600160a01b03821660009081526003602052604081208054839290610bf1908490610f60565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016109cd565b6060610c438484600085610c4b565b949350505050565b606082471015610cac5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610493565b843b610cfa5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610493565b600080866001600160a01b03168587604051610d169190611038565b60006040518083038185875af1925050503d8060008114610d53576040519150601f19603f3d011682016040523d82523d6000602084013e610d58565b606091505b5091509150610d68828286610d73565b979650505050505050565b60608315610d8257508161038c565b825115610d925782518084602001fd5b8160405162461bcd60e51b81526004016104939190610df9565b600060208284031215610dbe57600080fd5b81356001600160a01b038116811461038c57600080fd5b60005b83811015610df0578181015183820152602001610dd8565b50506000910152565b6020815260008251806020840152610e18816040850160208701610dd5565b601f01601f19169190910160400192915050565b60008083601f840112610e3e57600080fd5b50813567ffffffffffffffff811115610e5657600080fd5b6020830191508360208260051b8501011115610e7157600080fd5b9250929050565b60008060008060408587031215610e8e57600080fd5b843567ffffffffffffffff80821115610ea657600080fd5b610eb288838901610e2c565b90965094506020870135915080821115610ecb57600080fd5b50610ed887828801610e2c565b95989497509550505050565b600060208284031215610ef657600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610ada57610ada610efd565b600181811c90821680610f3a57607f821691505b602082108103610f5a57634e487b7160e01b600052602260045260246000fd5b50919050565b80820180821115610ada57610ada610efd565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff8103610fd457610fd4610efd565b60010192915050565b8082028115828204841417610ada57610ada610efd565b60008261101157634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561102857600080fd5b8151801515811461038c57600080fd5b6000825161104a818460208701610dd5565b919091019291505056fea2646970667358221220cf8b13e9b08808f8a634de4e3d68dd213ee38503eb8299b3fb55f3f3c0ed0b5c64736f6c634300081700338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0";

type LinearReleaseTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LinearReleaseTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LinearReleaseToken__factory extends ContractFactory {
  constructor(...args: LinearReleaseTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    owner_: string,
    token_: string,
    amount_: BigNumberish,
    startTime_: BigNumberish,
    cliffEndTime_: BigNumberish,
    endTime_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<LinearReleaseToken> {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      owner_,
      token_,
      amount_,
      startTime_,
      cliffEndTime_,
      endTime_,
      overrides || {}
    ) as Promise<LinearReleaseToken>;
  }
  override getDeployTransaction(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    owner_: string,
    token_: string,
    amount_: BigNumberish,
    startTime_: BigNumberish,
    cliffEndTime_: BigNumberish,
    endTime_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      owner_,
      token_,
      amount_,
      startTime_,
      cliffEndTime_,
      endTime_,
      overrides || {}
    );
  }
  override attach(address: string): LinearReleaseToken {
    return super.attach(address) as LinearReleaseToken;
  }
  override connect(signer: Signer): LinearReleaseToken__factory {
    return super.connect(signer) as LinearReleaseToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LinearReleaseTokenInterface {
    return new utils.Interface(_abi) as LinearReleaseTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LinearReleaseToken {
    return new Contract(address, _abi, signerOrProvider) as LinearReleaseToken;
  }
}
