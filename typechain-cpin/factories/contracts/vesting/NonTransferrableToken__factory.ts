/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NonTransferrableToken,
  NonTransferrableTokenInterface,
} from "../../../contracts/vesting/NonTransferrableToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161057438038061057483398101604081905261002f91610115565b600061003b848261021d565b506001610048838261021d565b5060ff16608052506102dc9050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261007e57600080fd5b81516001600160401b038082111561009857610098610057565b604051601f8301601f19908116603f011681019082821181831017156100c0576100c0610057565b81604052838152602092508660208588010111156100dd57600080fd5b600091505b838210156100ff57858201830151818301840152908201906100e2565b6000602085830101528094505050505092915050565b60008060006060848603121561012a57600080fd5b83516001600160401b038082111561014157600080fd5b61014d8783880161006d565b9450602086015191508082111561016357600080fd5b506101708682870161006d565b925050604084015160ff8116811461018757600080fd5b809150509250925092565b600181811c908216806101a657607f821691505b6020821081036101c657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610218576000816000526020600020601f850160051c810160208610156101f55750805b601f850160051c820191505b8181101561021457828155600101610201565b5050505b505050565b81516001600160401b0381111561023657610236610057565b61024a816102448454610192565b846101cc565b602080601f83116001811461027f57600084156102675750858301515b600019600386901b1c1916600185901b178555610214565b600085815260208120601f198616915b828110156102ae5788860151825594840194600190910190840161028f565b50858210156102cc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805161027e6102f660003960006093015261027e6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806306fdde031461005c57806318160ddd1461007a578063313ce5671461008c57806370a08231146100bd57806395d89b41146100e6575b600080fd5b6100646100ee565b604051610071919061018f565b60405180910390f35b6002545b604051908152602001610071565b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610071565b61007e6100cb3660046101de565b6001600160a01b031660009081526003602052604090205490565b610064610180565b6060600080546100fd9061020e565b80601f01602080910402602001604051908101604052809291908181526020018280546101299061020e565b80156101765780601f1061014b57610100808354040283529160200191610176565b820191906000526020600020905b81548152906001019060200180831161015957829003601f168201915b5050505050905090565b6060600180546100fd9061020e565b60006020808352835180602085015260005b818110156101bd578581018301518582016040015282016101a1565b506000604082860101526040601f19601f8301168501019250505092915050565b6000602082840312156101f057600080fd5b81356001600160a01b038116811461020757600080fd5b9392505050565b600181811c9082168061022257607f821691505b60208210810361024257634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220615bbf8821835f1fcfd0dfba60e38e2a49ff9e97b2c8db201488a698621cb5ae64736f6c63430008170033";

type NonTransferrableTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NonTransferrableTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NonTransferrableToken__factory extends ContractFactory {
  constructor(...args: NonTransferrableTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<NonTransferrableToken> {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    ) as Promise<NonTransferrableToken>;
  }
  override getDeployTransaction(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    );
  }
  override attach(address: string): NonTransferrableToken {
    return super.attach(address) as NonTransferrableToken;
  }
  override connect(signer: Signer): NonTransferrableToken__factory {
    return super.connect(signer) as NonTransferrableToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NonTransferrableTokenInterface {
    return new utils.Interface(_abi) as NonTransferrableTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NonTransferrableToken {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NonTransferrableToken;
  }
}
