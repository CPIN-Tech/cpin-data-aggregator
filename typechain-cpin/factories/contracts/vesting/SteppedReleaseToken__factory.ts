/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SteppedReleaseToken,
  SteppedReleaseTokenInterface,
} from "../../../contracts/vesting/SteppedReleaseToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "address",
        name: "token_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "startTime_",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "cliffEndTime_",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "endTime_",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "interval_",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Allocated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountAllocations",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "accountClaims",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_holders",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "allocate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "cliffEndTime",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endTime",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "interval",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "releasableSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_principal",
        type: "uint256",
      },
    ],
    name: "releasableSupplyOfPrincipal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unallocated",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "startTime_",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "cliffEndTime_",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "endTime_",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "interval_",
        type: "uint64",
      },
    ],
    name: "updateTiming",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200174e3803806200174e83398101604081905262000034916200033c565b8989896000620000458482620004c5565b506001620000548382620004c5565b5060ff166080525050600480546001600160a01b0319163390811790915560405181906000906000805160206200172e833981519152908290a35060016005556200009f876200011b565b6001600160a01b0390951660a052600793909355600680546001600160401b03958616600160c01b026001600160c01b03958716600160801b02959095166001600160801b0393871668010000000000000000026001600160801b03199092169690941695909517949094171617179055506200059192505050565b6004546001600160a01b031633146200017b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620001e25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000172565b6004546040516001600160a01b038084169216906000805160206200172e83398151915290600090a3600480546001600160a01b0319166001600160a01b0392909216919091179055565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200025557600080fd5b81516001600160401b03808211156200027257620002726200022d565b604051601f8301601f19908116603f011681019082821181831017156200029d576200029d6200022d565b8160405283815260209250866020858801011115620002bb57600080fd5b600091505b83821015620002df5785820183015181830184015290820190620002c0565b6000602085830101528094505050505092915050565b805160ff811681146200030757600080fd5b919050565b80516001600160a01b03811681146200030757600080fd5b80516001600160401b03811681146200030757600080fd5b6000806000806000806000806000806101408b8d0312156200035d57600080fd5b8a516001600160401b03808211156200037557600080fd5b620003838e838f0162000243565b9b5060208d01519150808211156200039a57600080fd5b50620003a98d828e0162000243565b995050620003ba60408c01620002f5565b9750620003ca60608c016200030c565b9650620003da60808c016200030c565b955060a08b01519450620003f160c08c0162000324565b93506200040160e08c0162000324565b9250620004126101008c0162000324565b9150620004236101208c0162000324565b90509295989b9194979a5092959850565b600181811c908216806200044957607f821691505b6020821081036200046a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620004c0576000816000526020600020601f850160051c810160208610156200049b5750805b601f850160051c820191505b81811015620004bc57828155600101620004a7565b5050505b505050565b81516001600160401b03811115620004e157620004e16200022d565b620004f981620004f2845462000434565b8462000470565b602080601f831160018114620005315760008415620005185750858301515b600019600386901b1c1916600185901b178555620004bc565b600085815260208120601f198616915b82811015620005625788860151825594840194600190910190840162000541565b5085821015620005815787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a051611170620005be60003960008181610342015261052a015260006101c401526111706000f3fe608060405234801561001057600080fd5b50600436106101415760003560e01c806378e97925116100b8578063b19a439c1161007c578063b19a439c146102db578063bdad4dc3146102fb578063df1c455c1461030e578063f0192f5514610317578063f2fde38b1461032a578063fc0c546a1461033d57600080fd5b806378e979251461025f5780638da5cb5b1461027357806391a3c46214610298578063947a36fb146102b857806395d89b41146102d357600080fd5b80633197cbb61161010a5780633197cbb6146101ee5780633e5ea10a146102095780634e71d92d146102115780636bded9661461021b57806370a082311461022e578063715018a61461025757600080fd5b80628cc2621461014657806306fdde031461016c578063160a341e1461018157806318160ddd146101b5578063313ce567146101bd575b600080fd5b610159610154366004610e21565b610364565b6040519081526020015b60405180910390f35b6101746103c5565b6040516101639190610e6e565b60065461019c90600160401b900467ffffffffffffffff1681565b60405167ffffffffffffffff9091168152602001610163565b600254610159565b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610163565b60065461019c90600160801b900467ffffffffffffffff1681565b610159610457565b610219610477565b005b610219610229366004610ebe565b61058f565b61015961023c366004610e21565b6001600160a01b031660009081526003602052604090205490565b61021961062c565b60065461019c9067ffffffffffffffff1681565b6004546001600160a01b03165b6040516001600160a01b039091168152602001610163565b6101596102a6366004610e21565b60096020526000908152604090205481565b60065461019c90600160c01b900467ffffffffffffffff1681565b6101746106a0565b6101596102e9366004610e21565b60086020526000908152604090205481565b610219610309366004610f5e565b6106af565b61015960075481565b610159610325366004610fca565b610820565b610219610338366004610e21565b6108d9565b6102807f000000000000000000000000000000000000000000000000000000000000000081565b6001600160a01b038116600090815260086020526040812054819061038890610820565b90508060000361039b5750600092915050565b6001600160a01b0383166000908152600960205260409020546103be9082610ff9565b9392505050565b6060600080546103d49061100c565b80601f01602080910402602001604051908101604052809291908181526020018280546104009061100c565b801561044d5780601f106104225761010080835404028352916020019161044d565b820191906000526020600020905b81548152906001019060200180831161043057829003601f168201915b5050505050905090565b600061047260075461046860025490565b6103259190611046565b905090565b6002600554036104ce5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260055560006104de33610364565b9050806000036104ee5750610588565b336000908152600960205260408120805483929061050d908490611046565b9091555061051d905033826109c4565b6105516001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163383610a4e565b60405181815233907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a9060200160405180910390a2505b6001600555565b6004546001600160a01b031633146105b95760405162461bcd60e51b81526004016104c590611059565b6006805467ffffffffffffffff9586166fffffffffffffffffffffffffffffffff1990911617600160401b94861694909402939093176fffffffffffffffffffffffffffffffff16600160801b928516929092026001600160c01b031691909117600160c01b9190931602919091179055565b6004546001600160a01b031633146106565760405162461bcd60e51b81526004016104c590611059565b6004546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600480546001600160a01b0319169055565b6060600180546103d49061100c565b6004546001600160a01b031633146106d95760405162461bcd60e51b81526004016104c590611059565b8281146107345760405162461bcd60e51b815260206004820152602360248201527f4c696e65617252656c65617365546f6b656e3a206c656e677468206d69736d616044820152620e8c6d60eb1b60648201526084016104c5565b60148311156107ab5760405162461bcd60e51b815260206004820152603860248201527f4c696e65617252656c65617365546f6b656e3a206d617820323020686f6c646560448201527f727320617420696e697469616c20616c6c6f636174696f6e000000000000000060648201526084016104c5565b60005b60ff81168411156108195761080785858360ff168181106107d1576107d161108e565b90506020020160208101906107e69190610e21565b84848460ff168181106107fb576107fb61108e565b90506020020135610aa5565b80610811816110a4565b9150506107ae565b5050505050565b60065460009067ffffffffffffffff80821691600160801b9004164282118061085b5750600654600160401b900467ffffffffffffffff1642105b1561086a575060009392505050565b6000826108774284610b3b565b6108819190610ff9565b600654909150600090600160c01b900467ffffffffffffffff166108a581846110c3565b6108af91906110e5565b90506108bb8484610ff9565b6108c582886110e5565b6108cf91906110c3565b9695505050505050565b6004546001600160a01b031633146109035760405162461bcd60e51b81526004016104c590611059565b6001600160a01b0381166109685760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104c5565b6004546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600480546001600160a01b0319166001600160a01b0392909216919091179055565b80600260008282546109d69190610ff9565b90915550506001600160a01b03821660009081526003602052604081208054839290610a03908490610ff9565b90915550506040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020015b60405180910390a35050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610aa0908490610b55565b505050565b8060076000828254610ab79190610ff9565b90915550506001600160a01b03821660009081526008602052604081208054839290610ae4908490611046565b90915550610af490508282610c27565b816001600160a01b03167f472f36e28bb47edb7c69c9e2ac00a77c66b505df54e9c818ac57110b0629e8c382604051610b2f91815260200190565b60405180910390a25050565b6000818310610b4a5781610b4c565b825b90505b92915050565b6000610baa826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ca99092919063ffffffff16565b805190915015610aa05780806020019051810190610bc891906110fc565b610aa05760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104c5565b8060026000828254610c399190611046565b90915550506001600160a01b03821660009081526003602052604081208054839290610c66908490611046565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610a42565b6060610cb88484600085610cc0565b949350505050565b606082471015610d215760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104c5565b843b610d6f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104c5565b600080866001600160a01b03168587604051610d8b919061111e565b60006040518083038185875af1925050503d8060008114610dc8576040519150601f19603f3d011682016040523d82523d6000602084013e610dcd565b606091505b5091509150610ddd828286610de8565b979650505050505050565b60608315610df75750816103be565b825115610e075782518084602001fd5b8160405162461bcd60e51b81526004016104c59190610e6e565b600060208284031215610e3357600080fd5b81356001600160a01b03811681146103be57600080fd5b60005b83811015610e65578181015183820152602001610e4d565b50506000910152565b6020815260008251806020840152610e8d816040850160208701610e4a565b601f01601f19169190910160400192915050565b803567ffffffffffffffff81168114610eb957600080fd5b919050565b60008060008060808587031215610ed457600080fd5b610edd85610ea1565b9350610eeb60208601610ea1565b9250610ef960408601610ea1565b9150610f0760608601610ea1565b905092959194509250565b60008083601f840112610f2457600080fd5b50813567ffffffffffffffff811115610f3c57600080fd5b6020830191508360208260051b8501011115610f5757600080fd5b9250929050565b60008060008060408587031215610f7457600080fd5b843567ffffffffffffffff80821115610f8c57600080fd5b610f9888838901610f12565b90965094506020870135915080821115610fb157600080fd5b50610fbe87828801610f12565b95989497509550505050565b600060208284031215610fdc57600080fd5b5035919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610b4f57610b4f610fe3565b600181811c9082168061102057607f821691505b60208210810361104057634e487b7160e01b600052602260045260246000fd5b50919050565b80820180821115610b4f57610b4f610fe3565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff81036110ba576110ba610fe3565b60010192915050565b6000826110e057634e487b7160e01b600052601260045260246000fd5b500490565b8082028115828204841417610b4f57610b4f610fe3565b60006020828403121561110e57600080fd5b815180151581146103be57600080fd5b60008251611130818460208701610e4a565b919091019291505056fea26469706673582212209a1e8caf3a47c52df23ae0da7e49ff1f92b333b618bd91874a4146adfa7d31b264736f6c634300081700338be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0";

type SteppedReleaseTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SteppedReleaseTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SteppedReleaseToken__factory extends ContractFactory {
  constructor(...args: SteppedReleaseTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    owner_: string,
    token_: string,
    amount_: BigNumberish,
    startTime_: BigNumberish,
    cliffEndTime_: BigNumberish,
    endTime_: BigNumberish,
    interval_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): Promise<SteppedReleaseToken> {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      owner_,
      token_,
      amount_,
      startTime_,
      cliffEndTime_,
      endTime_,
      interval_,
      overrides || {}
    ) as Promise<SteppedReleaseToken>;
  }
  override getDeployTransaction(
    name_: string,
    symbol_: string,
    decimals_: BigNumberish,
    owner_: string,
    token_: string,
    amount_: BigNumberish,
    startTime_: BigNumberish,
    cliffEndTime_: BigNumberish,
    endTime_: BigNumberish,
    interval_: BigNumberish,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      owner_,
      token_,
      amount_,
      startTime_,
      cliffEndTime_,
      endTime_,
      interval_,
      overrides || {}
    );
  }
  override attach(address: string): SteppedReleaseToken {
    return super.attach(address) as SteppedReleaseToken;
  }
  override connect(signer: Signer): SteppedReleaseToken__factory {
    return super.connect(signer) as SteppedReleaseToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SteppedReleaseTokenInterface {
    return new utils.Interface(_abi) as SteppedReleaseTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SteppedReleaseToken {
    return new Contract(address, _abi, signerOrProvider) as SteppedReleaseToken;
  }
}
